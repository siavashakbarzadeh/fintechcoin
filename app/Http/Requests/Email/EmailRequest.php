<?php

namespace App\Http\Requests\Email;

use Illuminate\Contracts\Validation\Validator;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class EmailRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return $this->user();
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, mixed>
     */
    public function rules()
    {
        return [
            'emails' => ['required', 'array', 'min:1', 'exists:users,email'],
            'subject' => ['nullable', 'string'],
            'from_name' => ['nullable', 'string'],
            'message' => ['required', 'string'],
            'now' => ['nullable', 'boolean'],
            'schedule_date' => [!Rule::requiredIf($this->now), 'date'],
            'schedule_time' => [!Rule::requiredIf($this->now),'date_format:H:i'],
        ];
    }

    protected function prepareForValidation()
    {
        $this->merge(['now' => $this->filled('now') && $this->now == 1]);
    }

    protected function failedValidation(Validator $validator)
    {
        $this->dd($validator);
        parent::failedValidation($validator); // TODO: Change the autogenerated stub
    }
}
